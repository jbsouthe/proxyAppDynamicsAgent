#server port needs to be >1024 if not root, and should definitely not be run as root
#protocol can only be either http or tcp-socket ;both protocols use the same JSON format
#another experimental protocol, being introduced: logfiles
protocol=http
#the server port is a common configuration parameter for both http and tcp-socket
serverPort=8000
#allow remote connections set to true will listen on all interfaces (default = false)
# if this setting is false, we are only going to be listening on the loopback interface
allowRemoteConnections=false

#################################
# The settings in this section apply only to "logfiles", start with a .0 and go to .<maxInt>
logfiles.0.directory="./path/to/log/dir"
logfiles.0.filenames="regex pattern for a log file or files"
logfiles.0.defaultBTName="defaultBT"
#with (<?primarykey>) and (<?btname>) groupings:
logfiles.0.startBT="regex pattern to start a bt, with (<?primarykey) and (<?btname>)"
#with (<?primarykey>) grouping:
logfiles.0.endBT="regex to end a BT, with (<?primarykey)"
logfiles.0.errorMessage="regex to error the transaction, with (<?primarykey)"
logfiles.0.customData="regex to add as custom data, with (<?primarykey), (<?name>), and (<?value>)"

#################################
# The settings in this section apply only to "http" for hopefully obvious reasons
proxy-uri=/agent
#simple http auth requirement for /trap url; /mib and /action are not authenticated, as they are static information urls
authRequired=true
authUser=user
authPassword=secret
#keytool -genkeypair -keyalg RSA -alias selfsigned -keystore testkey.jks -storepass password -validity 360 -keysize 2048
useSSL=true
sslContext=TLS
keystoreInstance=JKS
keystorePassword=password
keystoreFile=testkey.jks
keyManagerFactory=SunX509
trustManagerFactory=SunX509
#shouldn't need to mess with these, but just in case....
threadPoolMaxSize=8
threadPoolKeepAliveSeconds=30
threadPoolCapacity=100
#################################

#################################
#log4j2 properties
name=PropertiesConfig
property.filename=logs/proxy-agent.log
appenders = rolling

appender.console.type = Console
appender.console.name = STDOUT
appender.console.layout.type = PatternLayout
appender.console.layout.pattern = %d{yyyy-MM-dd HH:mm:ss} %-5p %c{1}:%L - %m%n

appender.rolling.type = RollingFile
appender.rolling.name = RollingFile
appender.rolling.fileName = ${filename}
appender.rolling.filePattern = logs/proxy-agent-%d{yyyy-MM-dd}-%i.log.gz
appender.rolling.layout.type = PatternLayout
appender.rolling.layout.pattern = %d{yyyy-MM-dd HH:mm:ss} %-5p %c{1}:%L - %m%n
appender.rolling.policies.type = Policies
appender.rolling.policies.time.type = TimeBasedTriggeringPolicy
appender.rolling.policies.time.interval = 1
appender.rolling.policies.time.modulate = true
appender.rolling.policies.size.type = SizeBasedTriggeringPolicy
appender.rolling.policies.size.size=10MB
appender.rolling.strategy.type = DefaultRolloverStrategy
appender.rolling.strategy.max = 20

loggers=rolling
logger.rolling.name=com.cisco.josouthe
logger.rolling.level=debug
logger.rolling.additivity=false
logger.rolling.appenderRef.rolling.ref=RollingFile
#################################